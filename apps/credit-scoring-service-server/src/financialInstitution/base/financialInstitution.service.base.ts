/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  FinancialInstitution as PrismaFinancialInstitution,
} from "@prisma/client";

export class FinancialInstitutionServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.FinancialInstitutionCountArgs, "select">
  ): Promise<number> {
    return this.prisma.financialInstitution.count(args);
  }

  async financialInstitutions<
    T extends Prisma.FinancialInstitutionFindManyArgs
  >(
    args: Prisma.SelectSubset<T, Prisma.FinancialInstitutionFindManyArgs>
  ): Promise<PrismaFinancialInstitution[]> {
    return this.prisma.financialInstitution.findMany<Prisma.FinancialInstitutionFindManyArgs>(
      args
    );
  }
  async financialInstitution<
    T extends Prisma.FinancialInstitutionFindUniqueArgs
  >(
    args: Prisma.SelectSubset<T, Prisma.FinancialInstitutionFindUniqueArgs>
  ): Promise<PrismaFinancialInstitution | null> {
    return this.prisma.financialInstitution.findUnique(args);
  }
  async createFinancialInstitution<
    T extends Prisma.FinancialInstitutionCreateArgs
  >(
    args: Prisma.SelectSubset<T, Prisma.FinancialInstitutionCreateArgs>
  ): Promise<PrismaFinancialInstitution> {
    return this.prisma.financialInstitution.create<T>(args);
  }
  async updateFinancialInstitution<
    T extends Prisma.FinancialInstitutionUpdateArgs
  >(
    args: Prisma.SelectSubset<T, Prisma.FinancialInstitutionUpdateArgs>
  ): Promise<PrismaFinancialInstitution> {
    return this.prisma.financialInstitution.update<T>(args);
  }
  async deleteFinancialInstitution<
    T extends Prisma.FinancialInstitutionDeleteArgs
  >(
    args: Prisma.SelectSubset<T, Prisma.FinancialInstitutionDeleteArgs>
  ): Promise<PrismaFinancialInstitution> {
    return this.prisma.financialInstitution.delete(args);
  }
}
