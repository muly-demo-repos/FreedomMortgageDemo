/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { CreditScoreCreateNestedManyWithoutBorrowersInput } from "./CreditScoreCreateNestedManyWithoutBorrowersInput";
import { ValidateNested, IsOptional, IsDate, IsString } from "class-validator";
import { Type } from "class-transformer";
import { FinancialRecordCreateNestedManyWithoutBorrowersInput } from "./FinancialRecordCreateNestedManyWithoutBorrowersInput";
import { ScoreReportCreateNestedManyWithoutBorrowersInput } from "./ScoreReportCreateNestedManyWithoutBorrowersInput";

@InputType()
class BorrowerCreateInput {
  @ApiProperty({
    required: false,
    type: () => CreditScoreCreateNestedManyWithoutBorrowersInput,
  })
  @ValidateNested()
  @Type(() => CreditScoreCreateNestedManyWithoutBorrowersInput)
  @IsOptional()
  @Field(() => CreditScoreCreateNestedManyWithoutBorrowersInput, {
    nullable: true,
  })
  creditScores?: CreditScoreCreateNestedManyWithoutBorrowersInput;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  dateOfBirth?: Date | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  email?: string | null;

  @ApiProperty({
    required: false,
    type: () => FinancialRecordCreateNestedManyWithoutBorrowersInput,
  })
  @ValidateNested()
  @Type(() => FinancialRecordCreateNestedManyWithoutBorrowersInput)
  @IsOptional()
  @Field(() => FinancialRecordCreateNestedManyWithoutBorrowersInput, {
    nullable: true,
  })
  financialRecords?: FinancialRecordCreateNestedManyWithoutBorrowersInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  firstName?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  lastName?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  phoneNumber?: string | null;

  @ApiProperty({
    required: false,
    type: () => ScoreReportCreateNestedManyWithoutBorrowersInput,
  })
  @ValidateNested()
  @Type(() => ScoreReportCreateNestedManyWithoutBorrowersInput)
  @IsOptional()
  @Field(() => ScoreReportCreateNestedManyWithoutBorrowersInput, {
    nullable: true,
  })
  scoreReports?: ScoreReportCreateNestedManyWithoutBorrowersInput;
}

export { BorrowerCreateInput as BorrowerCreateInput };
