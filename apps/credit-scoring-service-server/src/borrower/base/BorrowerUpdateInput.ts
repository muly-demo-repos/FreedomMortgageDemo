/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { CreditScoreUpdateManyWithoutBorrowersInput } from "./CreditScoreUpdateManyWithoutBorrowersInput";
import { ValidateNested, IsOptional, IsDate, IsString } from "class-validator";
import { Type } from "class-transformer";
import { FinancialRecordUpdateManyWithoutBorrowersInput } from "./FinancialRecordUpdateManyWithoutBorrowersInput";
import { ScoreReportUpdateManyWithoutBorrowersInput } from "./ScoreReportUpdateManyWithoutBorrowersInput";

@InputType()
class BorrowerUpdateInput {
  @ApiProperty({
    required: false,
    type: () => CreditScoreUpdateManyWithoutBorrowersInput,
  })
  @ValidateNested()
  @Type(() => CreditScoreUpdateManyWithoutBorrowersInput)
  @IsOptional()
  @Field(() => CreditScoreUpdateManyWithoutBorrowersInput, {
    nullable: true,
  })
  creditScores?: CreditScoreUpdateManyWithoutBorrowersInput;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  dateOfBirth?: Date | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  email?: string | null;

  @ApiProperty({
    required: false,
    type: () => FinancialRecordUpdateManyWithoutBorrowersInput,
  })
  @ValidateNested()
  @Type(() => FinancialRecordUpdateManyWithoutBorrowersInput)
  @IsOptional()
  @Field(() => FinancialRecordUpdateManyWithoutBorrowersInput, {
    nullable: true,
  })
  financialRecords?: FinancialRecordUpdateManyWithoutBorrowersInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  firstName?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  lastName?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  phoneNumber?: string | null;

  @ApiProperty({
    required: false,
    type: () => ScoreReportUpdateManyWithoutBorrowersInput,
  })
  @ValidateNested()
  @Type(() => ScoreReportUpdateManyWithoutBorrowersInput)
  @IsOptional()
  @Field(() => ScoreReportUpdateManyWithoutBorrowersInput, {
    nullable: true,
  })
  scoreReports?: ScoreReportUpdateManyWithoutBorrowersInput;
}

export { BorrowerUpdateInput as BorrowerUpdateInput };
